{"version":3,"sources":["shared/components/Landing/landing.module.scss","shared/components/LinkItemButton/linkitembutton.module.scss","App.js","shared/components/UIComponent/Avatar.js","user/components/UserItem/UserItem.js","shared/StyledComponents/StyledUl.js","user/components/UsersList/UsersList.js","user/pages/UsersPage/Users.js","shared/components/Navigation/MainHeader.js","shared/components/UIComponent/BurgerButton.js","shared/components/Navigation/CustomNavLink.js","redux/actions/actionTypes.js","redux/actions/modalActions.js","redux/actions/authAction.js","shared/Functions/modalFunction.js","shared/components/Navigation/NavLinkConteiner.js","shared/components/Navigation/MainNavigation.js","shared/components/MainView/MainView.js","shared/components/UIComponent/Card.js","shared/components/FormElements/CustomButton.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIComponent/Backdrop.js","shared/components/UIComponent/Map.js","shared/components/UIComponent/Modal.js","shared/components/UIComponent/LoadingSpinner.js","shared/components/FormElements/ImageUploader.js","shared/StyledComponents/StyledForm.js","places/pages/PlaceForm.js","places/pages/UpdatePlace.js","places/pages/AuthForm.js","shared/components/MainView/AuthFormView.js","shared/components/LinkItemButton/LinkItemButton.js","shared/components/Landing/Landing.js","redux/reduers/modalReducer.js","redux/reduers/authReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","logoutTimer","StyledUserImageBCG","styled","div","props","image","StyledPlaceImageSRC","img","Avatar","userAvatar","placeAvatar","src","StyledLi","li","StyledContentDiv","StyledUserInfo","UserItem","console","log","to","id","style","textDecoration","color","className","name","placeCount","StyledUl","ul","UsersList","items","noUsersDiv","length","map","user","_id","userImage","userName","ownPlaces","Users","useState","USERS","setUsers","useSelector","state","authReducer","fetchUsers","a","fetch","response","json","data","usersWithoutLoged","users","filter","el","useEffect","StyledHeader","header","MainHeader","children","StyledButton","button","StyledSpanBar","span","BurgerButton","openMenuFnc","onClick","StyledLink","NavLink","CustomNavLink","path","exact","clickFnc","text","CLOSE_MODAL","OPEN_PLACE_MODAL","OPEN_DELETE_ITEM_MODAL","OPEN_INFO_MODAL","USER_LOGIN","USER_TOKEN_LOGIN","USER_LOGOUT","USER_DELETED_PLACE","modalPlaceOpen","modalType","type","actionTypes","payload","openDeleteItemModal","openInfoModal","modalClose","storeUserData","logout","tokenLogin","updatePlaces","modalOpenHandler","modalStatus","dispatch","actionCreator","StyledNavContainer","isOpen","css","menuAnimationOpen","isClosed","menumenuAnimationClosed","keyframes","NavLinkConteiner","menuClose","isAuthenicate","modalState","modalReducer","useDispatch","userType","localStorage","removeItem","StyledH1","h1","Link","MainNavigation","menuOpen","setMenuOpen","handleMobileMenu","prevState","StyledMainView","MainView","StyledCard","Card","StyledCustomButton","inverse","danger","disabledBtn","CustomButton","href","as","disabled","istaskfinished","PlaceItem","modalPlaceInfo","adress","address","coordinates","modalDeleteInfo","itemID","imageUrl","info","title","description","PlaceList","places","place","placeImage","creatorId","creator","location","isTaskFinished","UserPlaces","useRouteMatch","url","userId","useParams","userPlaces","setUserPlaces","fetchUserPlaces","body","StyledBackdropDiv","active","Backdrop","actionCretor","StyledMapDiv","Map","mapRef","useRef","center","zoom","window","ol","target","current","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","long","lat","Vector","features","Feature","geometry","geom","Point","addLayer","ref","StyledInfoDiv","ModalOverlay","message","isDeleted","deleteModalInfo","setDeleteModalInfo","modalData","token","history","useHistory","content","event","stopPropagation","deleteItem","method","headers","Authorization","deleteResponse","push","Modal","modaltype","LoadingSpinner","asOverlay","StyledPreviewContainer","StyledContainer","ImageUploader","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileState","fileReader","FileReader","onload","result","readAsDataURL","display","accept","onChange","e","pickedFile","files","fileStateHandler","alt","click","errorText","StyledForm","form","StyledInput","input","StyledTextArea","StyledErrorDiv","PlaceForm","imageFilePicker","setImageFilePicker","isLoading","setIsLoading","addEditPlace","JSON","stringify","newPlaceresponse","formik","useFormik","initialValues","placeName","editPlace","checked","validate","values","errors","onSubmit","formData","FormData","append","newPlace","success","placeId","editedPlace","handleSubmit","htmlFor","handleChange","onBlur","handleBlur","value","Object","keys","includes","touched","UpdatePlace","placeToEdit","setPLaceToEdit","getPLacetoEdit","placeID","fetchedPlace","dataToEdit","AuthForm","postAuth","email","password","confirmPassword","test","formType","newUser","tokenExpDate","Date","getTime","toISOString","setItem","expiration","changeFormTypeFunc","AuthFormView","setFormType","buttonType","preventDefault","LinkItemButton","action","styles","Landing","mainWrapper","contentWrapper","signWrapper","buttonWrapper","pictureWrapper","contactWrapper","App","routes","logOuthandler","logUserWithToken","storedData","expTime","logWithToken","parse","getItem","remainingTime","setTimeout","clearTimeout","component","initialState","filtredPlaces","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f01d6f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"landing_mainWrapper__1IXPz\",\"contentWrapper\":\"landing_contentWrapper__1ErqF\",\"signWrapper\":\"landing_signWrapper__3Is3n\",\"buttonWrapper\":\"landing_buttonWrapper__3PG2I\",\"pictureWrapper\":\"landing_pictureWrapper__3SMwD\",\"contactWrapper\":\"landing_contactWrapper__1LurJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"linkitembutton_span__1IJ15\",\"action\":\"linkitembutton_action__1kgb2\"};","import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Users from './user/pages/UsersPage/Users';\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport MainView from './shared/components/MainView/MainView';\r\nimport UserPlaces from './places/pages/UserPlaces';\r\nimport Modal from './shared/components/UIComponent/Modal';\r\nimport UpdatePlace from './places/pages/UpdatePlace';\r\nimport PlaceForm from './places/pages/PlaceForm';\r\nimport AuthFormView from './shared/components/MainView/AuthFormView';\r\nimport Landing from './shared/components/Landing/Landing';\r\nimport { modalOpenHandler } from './shared/Functions/modalFunction';\r\nimport * as actionCreator from './redux/actions';\r\nlet logoutTimer;\r\n\r\nfunction App() {\r\n  const { isAuthenicate, user, token, tokenExpDate } = useSelector(\r\n    (state) => state.authReducer\r\n  );\r\n\r\n  const modalState = useSelector((state) => state.modalReducer.isOpen);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const logOuthandler = () => {\r\n    console.log('logout!!!!!!!!');\r\n    dispatch(actionCreator.logout());\r\n    localStorage.removeItem('userData'); // usuwanie rekordu z local storage\r\n    modalOpenHandler(\r\n      modalState,\r\n      dispatch,\r\n      actionCreator,\r\n      'info',\r\n      'Użytkownik wylogowany'\r\n    );\r\n  };\r\n\r\n  const logUserWithToken = async (storedData) => {\r\n    // aby nie zwracać nowego tokenu z nowym czasem itd\r\n    //używamy danych tokena z localStorage\r\n    const data = {\r\n      expTime: storedData.expiration,\r\n    };\r\n    try {\r\n      const logWithToken = await fetch(\r\n        '/auth/loginToken', //  'http://localhost:8080/auth/loginToken'\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            Authorization: `Bearer ${storedData.token}`,\r\n          },\r\n          body: JSON.stringify(data),\r\n        }\r\n      );\r\n\r\n      const response = await logWithToken.json();\r\n      if (response.success === false) {\r\n        logOuthandler();\r\n        return;\r\n      }\r\n      // aby nie zwracać nowego tokenu z nowym czasem itd\r\n      //używamy danych tokena z localStorage\r\n      // w innym wypadku gdybyśmy zwracali nowy token\r\n      // czas 60 minut byłby odnawiany za każdym razem\r\n      dispatch(\r\n        actionCreator.tokenLogin({\r\n          user: response.user,\r\n          token: storedData.token,\r\n          tokenExpDate: storedData.expiration,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log('BŁAD Z CATCH');\r\n      modalOpenHandler(\r\n        modalState,\r\n        dispatch,\r\n        actionCreator,\r\n        'info',\r\n        err.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const storedData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n  // use effect do odliczania 60 minut od zalogowania do automatycznego wylogowania\r\n  useEffect(() => {\r\n    if (token) {\r\n      const remainingTime =\r\n        new Date(tokenExpDate).getTime() - new Date().getTime();\r\n      console.log(remainingTime);\r\n      logoutTimer = setTimeout(logOuthandler, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token]);\r\n\r\n  // drugi use effect do automatycznego logowania\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n    // sprawdzamy czy jest coś w locaStorage\r\n    // czy jest tam token\r\n    // i czy czas wygaśniecia który został zapisany przy logowaniu przez formularz\r\n    // jest dalej większy od obecnego czasu\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      // jeśli tak to wywołujemy funckję automatycznego logowania\r\n      logUserWithToken(storedData);\r\n    }\r\n  }, []);\r\n\r\n  let routes;\r\n  if (!isAuthenicate) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Route path={'/auth'} component={AuthFormView} />\r\n        <Redirect to={'/auth'} />\r\n      </Switch>\r\n    );\r\n  } else if (isAuthenicate && token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Route path=\"/allUsers\" exact component={Users} />\r\n        <Route path=\"/:userId/places\" component={UserPlaces} />\r\n        <Route path=\"/places/:placeId\" component={UpdatePlace} />\r\n        <Route path={'/userPlace/new'} component={PlaceForm} />\r\n        <Route path={'/auth'} component={AuthFormView} />\r\n        <Redirect to={'/'} />\r\n      </Switch>\r\n    );\r\n  } else if (isAuthenicate && token && user.userType === 'admin') {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Route path=\"/allUsers\" exact component={Users} />\r\n        <Route path=\"/:userId/places\" component={UserPlaces} />\r\n        <Route path=\"/places/:placeId\" component={UpdatePlace} />\r\n        <Route path={'/userPlace/new'} component={PlaceForm} />\r\n        <Route path={'/auth'} component={AuthFormView} />\r\n        <Redirect to={'/'} />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <MainNavigation />\r\n      <MainView>\r\n        <Modal />\r\n        {routes}\r\n      </MainView>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledUserImageBCG = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-image: ${(props) =>\r\n    props.image ? `url(${props.image})` : 'asdasd'};\r\n  background-repeat: no-repeat;\r\n  background-size: 150px 150px, cover;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst StyledPlaceImageSRC = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 300px;\r\n  object-fit: fill;\r\n`;\r\n// const StyledImage = styled.img`\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   display: block;\r\n//   border-radius: 50%;\r\n// `;\r\n\r\nconst Avatar = (props) => {\r\n  return (\r\n    <>\r\n      {props.userAvatar && (\r\n        <StyledUserImageBCG image={props.image ? props.image : false} />\r\n      )}\r\n      {props.placeAvatar && <StyledPlaceImageSRC src={props.image} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../../shared/components/UIComponent/Avatar';\r\n\r\nconst StyledLi = styled.li`\r\n  background-color: black;\r\n  width: 40%;\r\n  margin-bottom: 10px;\r\n  margin-right: 10px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  padding: 5px 5px;\r\n  color: black;\r\n  @media (max-width: 1024px) {\r\n    width: 90%;\r\n  }\r\n  &:hover {\r\n    background-color: yellow;\r\n    color: black;\r\n  }\r\n  &:hover .info h2 {\r\n    color: black;\r\n  }\r\n`;\r\nconst StyledContentDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\nconst StyledUserInfo = styled.div`\r\n  width: 25%;\r\n  margin-right: 20px;\r\n  & h2 {\r\n    color: yellow;\r\n  }\r\n  & h3 {\r\n    color: white;\r\n  }\r\n`;\r\nconst UserItem = (props) => {\r\n  console.log(props.image);\r\n  return (\r\n    <>\r\n      <StyledLi>\r\n        <Link\r\n          to={`/${props.id}/places`}\r\n          style={{ textDecoration: 'none', color: 'black' }}\r\n        >\r\n          <StyledContentDiv>\r\n            {/* http://localhost:8080 */}\r\n            <Avatar image={`/${props.image}`} userAvatar />\r\n            <StyledUserInfo className=\"info\">\r\n              <h2>{props.name}</h2>\r\n              <h3>\r\n                {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n              </h3>\r\n            </StyledUserInfo>\r\n          </StyledContentDiv>\r\n        </Link>\r\n      </StyledLi>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledUl = styled.ul`\r\n  list-style: none;\r\n  width: 80%;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  @media (max-width: 1024px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport { StyledUl };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport UserItem from '../UserItem/UserItem';\r\n\r\nimport { StyledUl } from '../../../shared/StyledComponents/StyledUl';\r\n\r\nconst UsersList = ({ items }) => {\r\n  const noUsersDiv = <h2>No users found</h2>;\r\n  return (\r\n    <>\r\n      {items.length === 0 ? (\r\n        noUsersDiv\r\n      ) : (\r\n        <StyledUl>\r\n          {items.map((user) => (\r\n            <UserItem\r\n              key={user.id}\r\n              id={user._id}\r\n              image={user.userImage}\r\n              name={user.userName}\r\n              placeCount={user.ownPlaces.length}\r\n              color={user.color}\r\n            />\r\n          ))}\r\n        </StyledUl>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport UsersList from '../../components/UsersList/UsersList';\r\n\r\nconst Users = () => {\r\n  const [USERS, setUsers] = useState([]);\r\n\r\n  const { user } = useSelector((state) => state.authReducer);\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch('/auth'); //http://localhost:8080/auth\r\n      const data = await response.json();\r\n      if (user.id) {\r\n        const usersWithoutLoged = data.users.filter((el) => el._id !== user.id);\r\n        setUsers(usersWithoutLoged);\r\n        return;\r\n      }\r\n      setUsers(data.users);\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return <UsersList items={USERS} />;\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.header`\r\n  width: 100vw;\r\n  height: 75px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 100;\r\n  background: #ff0055;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst MainHeader = (props) => {\r\n  return <StyledHeader>{props.children}</StyledHeader>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  display: none;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: none;\r\n  margin-left: 10px;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: transparent;\r\n  @media (max-width: 760px) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst StyledSpanBar = styled.span`\r\n  width: 90%;\r\n  height: 5px;\r\n  background-color: white;\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst BurgerButton = ({ openMenuFnc }) => {\r\n  return (\r\n    <StyledButton onClick={openMenuFnc}>\r\n      <StyledSpanBar />\r\n      <StyledSpanBar />\r\n      <StyledSpanBar />\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default BurgerButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  height: 40px;\r\n  display: block;\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &:hover {\r\n    background-color: yellow;\r\n    color: black;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst CustomNavLink = (props) => {\r\n  return (\r\n    <StyledLink to={props.path} exact={props.exact} onClick={props.clickFnc}>\r\n      {props.text}\r\n    </StyledLink>\r\n  );\r\n};\r\n\r\nexport default CustomNavLink;\r\n","export const CLOSE_MODAL = 'CLOSE_MODAL';\r\nexport const OPEN_PLACE_MODAL = 'OPEN_PLACE_MODAL';\r\nexport const OPEN_DELETE_ITEM_MODAL = 'OPEN_DELETE_ITEM_MODAL';\r\nexport const OPEN_INFO_MODAL = ' OPEN_INFO_MODAL';\r\n\r\nexport const USER_LOGIN = 'USER_LOGIN';\r\nexport const USER_TOKEN_LOGIN = 'USER_TOKEN_LOGIN';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\nexport const USER_DELETED_PLACE = 'USER_DELETED_PLACE';\r\n// export const USER_ADD_PLACE = 'USER_ADD_PLACE';\r\n","import * as actionTypes from './actionTypes';\r\n\r\nconst modalPlaceOpen = (modalType, data) => {\r\n  return {\r\n    type: actionTypes.OPEN_PLACE_MODAL,\r\n    payload: {\r\n      modalType,\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nconst openDeleteItemModal = (modalType, data) => {\r\n  console.log(data);\r\n  return {\r\n    type: actionTypes.OPEN_DELETE_ITEM_MODAL,\r\n    payload: {\r\n      modalType,\r\n      data,\r\n    },\r\n  };\r\n};\r\nconst openInfoModal = (modalType, data) => {\r\n  console.log('AKCJA INFO', data, modalType);\r\n  return {\r\n    type: actionTypes.OPEN_INFO_MODAL,\r\n    payload: {\r\n      modalType,\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nconst modalClose = () => {\r\n  return {\r\n    type: actionTypes.CLOSE_MODAL,\r\n  };\r\n};\r\n\r\nexport { modalPlaceOpen, modalClose, openDeleteItemModal, openInfoModal };\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst storeUserData = (data) => {\r\n  return {\r\n    type: actionTypes.USER_LOGIN,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst logout = () => {\r\n  return {\r\n    type: actionTypes.USER_LOGOUT,\r\n  };\r\n};\r\n\r\nconst tokenLogin = (data) => {\r\n  return {\r\n    type: actionTypes.USER_TOKEN_LOGIN,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst updatePlaces = (id) => {\r\n  return {\r\n    type: actionTypes.USER_DELETED_PLACE,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport { storeUserData, logout, updatePlaces, tokenLogin };\r\n","const modalOpenHandler = (\r\n  modalStatus,\r\n  dispatch,\r\n  actionCreator,\r\n  modalType,\r\n  data\r\n) => {\r\n  if (modalStatus === false && modalType === 'deleteItem') {\r\n    console.log(data);\r\n    dispatch(actionCreator.openDeleteItemModal(modalType, data));\r\n  }\r\n  if (modalStatus === false && modalType === 'placeInfo') {\r\n    dispatch(actionCreator.modalPlaceOpen(modalType, data));\r\n  }\r\n  if (modalStatus === false && modalType === 'info') {\r\n    dispatch(actionCreator.openInfoModal(modalType, data));\r\n  }\r\n\r\n  if (modalStatus === true) {\r\n    dispatch(actionCreator.modalClose());\r\n  }\r\n};\r\n\r\nexport { modalOpenHandler };\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CustomNavLink from './CustomNavLink';\r\n\r\nimport * as actionCreator from '../../../redux/actions';\r\nimport { Switch } from 'react-router';\r\nimport { modalOpenHandler } from '../../Functions/modalFunction';\r\n\r\nconst StyledNavContainer = styled.ul`\r\n  display: flex;\r\n  width: 60%;\r\n  list-style-type: none;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 760px) {\r\n    width: 100%;\r\n    display: block;\r\n    position: absolute;\r\n    top: -150px;\r\n    left: 0px;\r\n    list-style-type: none;\r\n    background: #ff0055;\r\n    transition: 1s;\r\n\r\n    &.isOpen {\r\n      top: 75px;\r\n    }\r\n\r\n    &.isClosed {\r\n      top: -150px;\r\n    }\r\n    /* ${(props) =>\r\n      props.isOpen &&\r\n      css`\r\n        display: block;\r\n        position: absolute;\r\n        top: -150px;\r\n        left: 0px;\r\n        animation: ${menuAnimationOpen} 0.3s linear forwards;\r\n      `}\r\n\r\n    ${(props) =>\r\n      props.isClosed &&\r\n      css`\r\n        animation: ${menumenuAnimationClosed} 0.3s linear forwards;\r\n      `} */\r\n  }\r\n`;\r\n// creating keyframes\r\n\r\nconst menuAnimationOpen = keyframes`\r\nfrom {\r\n    top:-150px;\r\n}\r\nto {\r\ntop:70px\r\n}\r\n`;\r\n\r\nconst menumenuAnimationClosed = keyframes`\r\nfrom {\r\n    top:70px;\r\n}\r\nto {\r\n    top:-150px;\r\n}\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  width: 25%;\r\n  @media (max-width: 760px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst NavLinkConteiner = ({ isOpen, menuClose }) => {\r\n  const { isAuthenicate, user } = useSelector((state) => state.authReducer);\r\n  const modalState = useSelector((state) => state.modalReducer.isOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  const logOuthandler = () => {\r\n    console.log('logout!!!!!!!!');\r\n    dispatch(actionCreator.logout());\r\n    localStorage.removeItem('userData'); // usuwanie rekordu z local storage\r\n    modalOpenHandler(\r\n      modalState,\r\n      dispatch,\r\n      actionCreator,\r\n      'info',\r\n      'Użytkownik wylogowany'\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledNavContainer\r\n      isOpen={isOpen}\r\n      isClosed={!isOpen}\r\n      className={isOpen ? 'isOpen' : 'isClosed'}\r\n      onClick={menuClose}\r\n    >\r\n      {isAuthenicate && user.userType === 'user' && (\r\n        <>\r\n          <StyledLi>\r\n            <CustomNavLink path={'/userPlace/new'} text={'Add Place'} />\r\n          </StyledLi>\r\n          <StyledLi>\r\n            <CustomNavLink path={`/${user.id}/places`} text={'My Place'} />\r\n          </StyledLi>\r\n        </>\r\n      )}\r\n      {isAuthenicate && user.userType === 'admin' && (\r\n        <>\r\n          <StyledLi>\r\n            <CustomNavLink path={'/allUsers'} text={'All Users'} />\r\n          </StyledLi>\r\n        </>\r\n      )}\r\n      <StyledLi>\r\n        {!isAuthenicate ? (\r\n          <CustomNavLink path={'/auth'} text={'Authenticate'} />\r\n        ) : (\r\n          <CustomNavLink\r\n            path={'/auth'}\r\n            text={'LogOut'}\r\n            clickFnc={logOuthandler}\r\n          />\r\n        )}\r\n      </StyledLi>\r\n    </StyledNavContainer>\r\n  );\r\n};\r\n\r\nexport default NavLinkConteiner;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport BurgerButton from '../UIComponent/BurgerButton';\r\nimport NavLinkConteiner from './NavLinkConteiner';\r\n\r\nconst StyledH1 = styled.h1`\r\n  margin: 0 20px 0 0;\r\n  @media (min-width: 760px) {\r\n    margin: 0 0px 0 20px;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: White;\r\n  text-decoration: none;\r\n  margin: 1rem;\r\n  position: relative;\r\n  &:hover {\r\n    color: green;\r\n  }\r\n`;\r\n\r\nconst MainNavigation = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const handleMobileMenu = () => {\r\n    setMenuOpen((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <MainHeader>\r\n      <BurgerButton openMenuFnc={handleMobileMenu} />\r\n      <StyledH1>\r\n        <StyledLink to={`/`}>CLEAN COMPANY</StyledLink>\r\n      </StyledH1>\r\n      <NavLinkConteiner isOpen={menuOpen} menuClose={handleMobileMenu} />\r\n    </MainHeader>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledMainView = styled.div`\r\n  width: 100vw;\r\n  min-height: calc(100vh - 75px);\r\n  background-color: #454545;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  margin-top: 75px;\r\n`;\r\n\r\nconst MainView = ({ children }) => {\r\n  return <StyledMainView>{children}</StyledMainView>;\r\n};\r\n\r\nexport default MainView;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst StyledCard = styled.div`\r\n  position: relative;\r\n  margin: 0 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n  border-radius: 6px;\r\n  padding: 1rem;\r\n  overflow: hidden;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  min-height: 200px;\r\n  min-width: 250px;\r\n`;\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <StyledCard className={`card ${props.className}`}>\r\n      {props.children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst StyledCustomButton = styled.button`\r\n  width: 75px;\r\n  height: 40px;\r\n  padding: 0.5rem 1rem;\r\n  display: flex;\r\n  margin-top: 1rem;\r\n  text-decoration: none;\r\n  border: 1px solid #ff0055;\r\n  border-radius: 4px;\r\n  background-color: #ff0055;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &:hover {\r\n    background: green;\r\n  }\r\n  ${(props) =>\r\n    props.inverse &&\r\n    css`\r\n      &:hover {\r\n        background-color: transparent;\r\n        color: #ff0055;\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.danger &&\r\n    css`\r\n      background: #830000;\r\n      border-color: #830000;\r\n\r\n      &:hover,\r\n      :active {\r\n        background: #f34343;\r\n        border-color: #f34343;\r\n      }\r\n    `}\r\n    ${(props) =>\r\n    props.disabledBtn &&\r\n    css`\r\n      background-color: grey;\r\n\r\n      &:hover {\r\n        background-color: grey;\r\n      }\r\n    `}\r\n    @media (min-width:1024px) {\r\n    width: 100px;\r\n    height: 40px;\r\n  }\r\n`;\r\n\r\nconst CustomButton = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <StyledCustomButton\r\n        inverse={props.inverse}\r\n        as={'a'}\r\n        href={props.href}\r\n        danger={props.danger}\r\n      >\r\n        {props.children}\r\n      </StyledCustomButton>\r\n    );\r\n  }\r\n\r\n  if (props.to) {\r\n    return (\r\n      <StyledCustomButton\r\n        as={Link}\r\n        to={props.to}\r\n        inverse={props.inverse}\r\n        danger={props.danger}\r\n      >\r\n        {props.children}\r\n      </StyledCustomButton>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <StyledCustomButton\r\n        onClick={props.onClick}\r\n        type={props.type}\r\n        disabled={props.disabled}\r\n        inverse={props.inverse}\r\n        danger={props.danger}\r\n        disabledBtn={props.disabled ? props.disabled : false}\r\n      >\r\n        {props.children}\r\n      </StyledCustomButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Avatar from '../../shared/components/UIComponent/Avatar';\r\nimport Card from '../../shared/components/UIComponent/Card';\r\nimport CustomButton from '../../shared/components/FormElements/CustomButton';\r\nimport * as actionCreator from '../../redux/actions';\r\nimport { modalOpenHandler } from '../../shared/Functions/modalFunction';\r\nconst StyledLi = styled.li`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst StyledContentDiv = styled.div`\r\n  width: 300px;\r\n  height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  & .image {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 70%;\r\n    & .finished {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background-color: rgba(255, 0, 0, 0.3);\r\n      h1 {\r\n        font-size: 22px;\r\n        color: ${(props) => props.istaskfinished && 'green'};\r\n      }\r\n    }\r\n  }\r\n\r\n  & .info {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    height: 25%;\r\n  }\r\n  & .btn {\r\n    border-top: 1px solid grey;\r\n\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    height: 25%;\r\n\r\n    /* & button {\r\n      width: 100px;\r\n      height: 25px;\r\n      border: none;\r\n      color: wheat;\r\n      background: grey;\r\n      border-radius: 5px;\r\n      &:hover {\r\n        background-color: green;\r\n        color: white;\r\n      }\r\n    } */\r\n  }\r\n  @media (min-width: 1024px) {\r\n    width: 500px;\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst PlaceItem = (props) => {\r\n  console.log(props.image);\r\n  const modalState = useSelector((state) => state.modalReducer.isOpen);\r\n  const dispatch = useDispatch();\r\n  console.log(props.id);\r\n\r\n  const modalPlaceInfo = {\r\n    adress: props.address,\r\n    coordinates: props.coordinates,\r\n  };\r\n\r\n  // const deletePlace = (id) => {\r\n  //   console.log(id);\r\n  // };\r\n\r\n  const modalDeleteInfo = {\r\n    itemID: props.id,\r\n    imageUrl: props.image,\r\n    info: 'Do you want to delete this place',\r\n  };\r\n\r\n  return (\r\n    <StyledLi>\r\n      <Card>\r\n        <StyledContentDiv istaskfinished={props.istaskfinished & true}>\r\n          <div className={'image'}>\r\n            {/* http://localhost:8080 */}\r\n            <Avatar image={`/${props.image}`} placeAvatar />\r\n            {props.istaskfinished && (\r\n              <div className={'finished'}>\r\n                <h1 istaskfinished={props.istaskfinished & true}>\r\n                  Sprzątanie zakończone !\r\n                </h1>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={'info'}>\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className={'btn'}>\r\n            <CustomButton\r\n              inverse\r\n              // href={'https://www.youtube.com/watch?v=AkMZ6fV3T_0'}\r\n              onClick={() =>\r\n                modalOpenHandler(\r\n                  modalState,\r\n                  dispatch,\r\n                  actionCreator,\r\n                  'placeInfo',\r\n                  modalPlaceInfo\r\n                )\r\n              }\r\n            >\r\n              VIEW ON MAP\r\n            </CustomButton>\r\n            {!props.istaskfinished && (\r\n              <CustomButton to={`/places/${props.id}`}>EDIT</CustomButton>\r\n            )}\r\n            <CustomButton\r\n              onClick={() =>\r\n                modalOpenHandler(\r\n                  modalState,\r\n                  dispatch,\r\n                  actionCreator,\r\n                  'deleteItem',\r\n                  modalDeleteInfo\r\n                )\r\n              }\r\n              danger\r\n            >\r\n              DELETE\r\n            </CustomButton>\r\n          </div>\r\n        </StyledContentDiv>\r\n      </Card>\r\n    </StyledLi>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Card from '../../shared/components/UIComponent/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport CustomButton from '../../shared/components/FormElements/CustomButton';\r\nimport { StyledUl } from '../../shared/StyledComponents/StyledUl';\r\n\r\nconst PlaceList = (props) => {\r\n  console.log('miejsca');\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      {props.places.length === 0 ? (\r\n        <Card>\r\n          <h2>No places found. Meybe add one ?</h2>\r\n          <CustomButton to={'/userPlace/new'}>ADD PLACES</CustomButton>\r\n        </Card>\r\n      ) : (\r\n        <StyledUl>\r\n          {props.places.map((place) => (\r\n            <PlaceItem\r\n              key={place._id}\r\n              id={place._id}\r\n              image={place.placeImage}\r\n              title={place.title}\r\n              description={place.description}\r\n              address={place.address}\r\n              creatorId={place.creator}\r\n              coordinates={place.location}\r\n              istaskfinished={place.isTaskFinished}\r\n            />\r\n          ))}\r\n        </StyledUl>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useRouteMatch } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport CustomButton from '../../shared/components/FormElements/CustomButton';\r\nimport Card from '../../shared/components/UIComponent/Card';\r\n\r\nconst UserPlaces = () => {\r\n  let { url } = useRouteMatch();\r\n  const { userId } = useParams();\r\n\r\n  const { user } = useSelector((state) => state.authReducer);\r\n  console.log('Miejsca usera z redaxa', user.ownPlaces);\r\n\r\n  const [userPlaces, setUserPlaces] = useState(user.ownPlaces);\r\n  // const [newUserPlaces, setNewUserPlaces] = useState([]);\r\n\r\n  // funkcje do pobierania userów\r\n  const fetchUserPlaces = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        //http://localhost:8080\r\n        `/places/userPlace/${userId}`\r\n      );\r\n      const body = await response.json();\r\n      console.log(body);\r\n\r\n      setUserPlaces(body.data.ownPlaces);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserPlaces();\r\n  }, [user.ownPlaces]);\r\n\r\n  if (!userPlaces) {\r\n    console.log(user.userType);\r\n    return (\r\n      <Card>\r\n        {user.userType === 'user' ? (\r\n          <>\r\n            <h2>No places found. Meybe add one ? </h2>\r\n            <CustomButton to={'/places/new'}>ADD PLACES</CustomButton>\r\n          </>\r\n        ) : (\r\n          <h2>User has no added places </h2>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return <PlaceList places={userPlaces} />;\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { modalOpenHandler } from '../../Functions/modalFunction';\r\nimport * as actionCretor from '../../../redux/actions';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst StyledBackdropDiv = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.75);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: ${(props) => (props.active ? `flex` : 'none')};\r\n  z-index: 100;\r\n`;\r\n\r\nconst Backdrop = (props) => {\r\n  const modalStatus = useSelector((state) => state.modalReducer.isOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <StyledBackdropDiv\r\n      active={modalStatus}\r\n      //Warunkowe nadawanie akcji !!!!!!\r\n      // {...(props.modalType === 'card' && {\r\n      //   onClick: () => modalOpenHandler(modalStatus, dispatch, actionCretor),\r\n      // })}\r\n\r\n      //Event zamykaący modal\r\n      onClick={() => modalOpenHandler(modalStatus, dispatch, actionCretor)}\r\n    >\r\n      {props.children}\r\n    </StyledBackdropDiv>\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledMapDiv = styled.div`\r\n  width: 300px;\r\n  height: 250px;\r\n  z-index: -10000;\r\n`;\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n  const popupRef = useRef();\r\n  const closerRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n  useEffect(() => {\r\n    const map = new window.ol.Map({\r\n      target: mapRef.current.id,\r\n      layers: [\r\n        new window.ol.layer.Tile({\r\n          source: new window.ol.source.OSM(),\r\n        }),\r\n      ],\r\n      view: new window.ol.View({\r\n        center: window.ol.proj.fromLonLat([center.long, center.lat]),\r\n        zoom: zoom,\r\n      }),\r\n    });\r\n    let layer = new window.ol.layer.Vector({\r\n      source: new window.ol.source.Vector({\r\n        features: [\r\n          new window.ol.Feature({\r\n            geometry: new window.ol.geom.Point(\r\n              window.ol.proj.fromLonLat([center.long, center.lat])\r\n            ),\r\n          }),\r\n        ],\r\n      }),\r\n    });\r\n\r\n    map.addLayer(layer);\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <>\r\n      <StyledMapDiv\r\n        ref={mapRef}\r\n        className={`map ${props.className}`}\r\n        style={props.style}\r\n        id=\"map\"\r\n      ></StyledMapDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { modalOpenHandler } from '../../Functions/modalFunction';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport * as actionCreator from '../../../redux/actions';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport Card from './Card';\r\nimport CustomButton from '../FormElements/CustomButton';\r\nimport Map from './Map';\r\n\r\nconst StyledInfoDiv = styled.div`\r\n  /* width: 100%; */\r\n  height: 250px;\r\n  background-color: aliceblue;\r\n  margin: 20px 10px;\r\n`;\r\n\r\nconst StyledContentDiv = styled.div`\r\n  position: relative;\r\n  width: 50%;\r\n  height: 50%;\r\n  z-index: 3200;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 12201;\r\n`;\r\n\r\nconst ModalOverlay = (props) => {\r\n  const [deleteModalInfo, setDeleteModalInfo] = useState({\r\n    message: 'Do you wannt to delete this record?',\r\n    isDeleted: false,\r\n  });\r\n\r\n  const modalData = useSelector((state) => state.modalReducer.data);\r\n  const { user, token } = useSelector((state) => state.authReducer);\r\n  const dispatch = useDispatch();\r\n  const modalStatus = useSelector((state) => state.modalReducer.isOpen);\r\n\r\n  const history = useHistory();\r\n\r\n  let content = <div>Sorry error ha ocured</div>;\r\n\r\n  useEffect(() => {\r\n    setDeleteModalInfo({\r\n      message: 'Do you wannt to delete this record?',\r\n      isDeleted: false,\r\n    });\r\n  }, [modalStatus]);\r\n  if (props.type === 'placeInfo') {\r\n    content = (\r\n      <StyledContentDiv\r\n        // na element zajmujący 100% modala dajemy klika z event.stopPropagation()\r\n        onClick={(event) => {\r\n          event.stopPropagation();\r\n        }}\r\n      >\r\n        <Card>\r\n          <h1>{modalData.adress}</h1>\r\n          <StyledInfoDiv>\r\n            <Map zoom={16} center={modalData.coordinates} />\r\n          </StyledInfoDiv>\r\n          <CustomButton\r\n            danger\r\n            onClick={() =>\r\n              modalOpenHandler(modalStatus, dispatch, actionCreator)\r\n            }\r\n          >\r\n            CLOSE\r\n          </CustomButton>\r\n        </Card>\r\n      </StyledContentDiv>\r\n    );\r\n  }\r\n  if (props.type === 'deleteItem') {\r\n    console.log('ADRES ZDJĘCIA W MODALU', modalData.imageUrl);\r\n    const deleteItem = async () => {\r\n      try {\r\n        const deleteResponse = await fetch(\r\n          //http://localhost:8080\r\n          `/places/delete/${modalData.itemID}`,\r\n          {\r\n            method: 'DELETE',\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        await deleteResponse.json();\r\n        setDeleteModalInfo({\r\n          message: 'Place has been deleted?',\r\n          isDeleted: true,\r\n        });\r\n        dispatch(actionCreator.updatePlaces(modalData.itemID));\r\n\r\n        history.push(`/${user.id}/places`);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    content = (\r\n      <StyledContentDiv\r\n        onClick={(event) => {\r\n          event.stopPropagation();\r\n        }}\r\n      >\r\n        <Card>\r\n          <h2>{deleteModalInfo.message} </h2>\r\n          {!deleteModalInfo.isDeleted && (\r\n            <CustomButton onClick={deleteItem}>Yes</CustomButton>\r\n          )}\r\n          <CustomButton\r\n            onClick={() =>\r\n              modalOpenHandler(modalStatus, dispatch, actionCreator)\r\n            }\r\n          >\r\n            Back\r\n          </CustomButton>\r\n        </Card>\r\n      </StyledContentDiv>\r\n    );\r\n  }\r\n  if (props.type === 'info') {\r\n    content = (\r\n      <StyledContentDiv\r\n        onClick={(event) => {\r\n          event.stopPropagation();\r\n        }}\r\n      >\r\n        <Card>\r\n          <h2>{modalData.message}</h2>\r\n          <CustomButton\r\n            onClick={() =>\r\n              modalOpenHandler(modalStatus, dispatch, actionCreator)\r\n            }\r\n          >\r\n            Back\r\n          </CustomButton>\r\n        </Card>\r\n      </StyledContentDiv>\r\n    );\r\n  }\r\n\r\n  return <>{content}</>;\r\n};\r\n\r\nconst Modal = (props) => {\r\n  const modalType = useSelector((state) => state.modalReducer.modalType);\r\n\r\n  return (\r\n    <>\r\n      <Backdrop modaltype={modalType}>\r\n        <ModalOverlay type={modalType} />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport CustomButton from './CustomButton';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPreviewContainer = styled.div`\r\n  width: 250px;\r\n  height: 250px;\r\n  border: 1px solid black;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ImageUploader = (props) => {\r\n  // const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  // za pomocą use ref na clic wywołujemy okno do wyboru zdjęć bez potrzeby wyświetlania\r\n  // inputu na froncie\r\n  const pickImageHandler = (e) => {\r\n    filePickerRef.current.click();\r\n    console.log('DUPA');\r\n  };\r\n  // metoda wywoływana na onChange gdy wybierzemy zdjęcie\r\n  const pickedHandler = (e) => {\r\n    console.log(props.fileState);\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    console.log(e.target.files); // dostajemy się paramtrów wybranego pliku\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      console.log('jestem w ifce');\r\n      pickedFile = e.target.files[0];\r\n      props.fileStateHandler(pickedFile);\r\n      // setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    // props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!props.fileState) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader(); // tworzymy nowy obiekt bilioteki fileReader\r\n    // event gdy który wychwyci załadowanie pliku zdjęcia wywoła funkcję która do stanu przekaże resultat wybranego zdjęcia\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(props.fileState); // ta funkcja wywoła się dopiero po zarejestrowaniu eventu on load i sparsuje plik na kod binarny\r\n  }, [props.fileState]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        id={props.id}\r\n        name={props.name}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <StyledContainer>\r\n        <StyledPreviewContainer>\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick the image</p>}\r\n        </StyledPreviewContainer>\r\n        <CustomButton type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </CustomButton>\r\n      </StyledContainer>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n","import styled, { css } from 'styled-components';\r\nconst StyledForm = styled.form`\r\n  min-width: 90%;\r\n  padding: 20px;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  & label {\r\n    font-size: 2rem;\r\n    margin-bottom: 5px;\r\n  }\r\n  /* & input,\r\n  textarea {\r\n    background-color: grey;\r\n    width: 80%;\r\n    margin-bottom: 10px;\r\n    border-radius: 5px;\r\n    font-size: 1.5rem;\r\n    padding: 5px;\r\n\r\n    ${(props) =>\r\n    props.danger &&\r\n    css`\r\n      background-color: red;\r\n      width: 10000px;\r\n    `}\r\n  }\r\n  & input {\r\n    height: 2.5rem;\r\n  }\r\n  & textarea {\r\n    height: 250px;\r\n  } */\r\n  @media (min-width: 1024px) {\r\n    min-width: 30%;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  /* background-color: grey; */\r\n  width: 80%;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  font-size: 1.5rem;\r\n  padding: 5px;\r\n  height: 2.5rem;\r\n  ${(props) =>\r\n    props.danger &&\r\n    css`\r\n      background-color: rgba(255, 0, 0, 0.1);\r\n    `}\r\n`;\r\nconst StyledTextArea = styled(StyledInput)`\r\n  height: 250px;\r\n`;\r\n\r\nconst StyledErrorDiv = styled.div`\r\n  color: red;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport { StyledForm, StyledInput, StyledTextArea, StyledErrorDiv };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useFormik, Field, FormikProvider } from 'formik';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Button from '../../shared/components/FormElements/CustomButton';\r\nimport { useHistory } from 'react-router-dom';\r\nimport LoadingSpinner from '../../shared/components/UIComponent/LoadingSpinner';\r\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\r\nimport {\r\n  StyledForm,\r\n  StyledInput,\r\n  StyledTextArea,\r\n  StyledErrorDiv,\r\n} from '../../shared/StyledComponents/StyledForm';\r\nimport * as actionCreator from '../../redux/actions';\r\nimport { modalOpenHandler } from '../../shared/Functions/modalFunction';\r\n\r\nconst PlaceForm = (props) => {\r\n  // stan do przechwytywania pliku z komponentu ImageUploader\r\n  const [imageFilePicker, setImageFilePicker] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  console.log(props);\r\n  // console.log('JEstem w FORMULARZU DO EDYCJI', props.editPlace);\r\n  const { user, token } = useSelector((state) => state.authReducer);\r\n  console.log(user);\r\n\r\n  const dispatch = useDispatch();\r\n  const modalState = useSelector((state) => state.modalReducer.isOpen);\r\n\r\n  const history = useHistory();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.placeName) {\r\n      errors.placeName = 'Required';\r\n    } else if (values.placeName.length > 25) {\r\n      errors.placeName = 'Must be 25 characters or less';\r\n    }\r\n\r\n    if (!values.description) {\r\n      errors.description = 'Required';\r\n    } else if (values.description.length < 15) {\r\n      errors.description = 'Must be 15 characters or more';\r\n    }\r\n    if (!props.editPlace) {\r\n      if (!values.address) {\r\n        errors.address = 'Required';\r\n      } else if (values.address.length > 45) {\r\n        errors.address = 'Must be 25 characters or less';\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const addEditPlace = async (url, data) => {\r\n    const newPlaceresponse = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return newPlaceresponse.json();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      placeName: props.editPlace ? props.editPlace.title : '',\r\n      description: props.editPlace ? props.editPlace.description : '',\r\n      address: '',\r\n      isTaskFinished: false,\r\n      checked: [],\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      if (!props.editPlace) {\r\n        try {\r\n          setIsLoading(true);\r\n\r\n          let formData = new FormData();\r\n          formData.append('title', values.placeName);\r\n          formData.append('description', values.description);\r\n          formData.append('address', values.address);\r\n          formData.append('creator', user.id);\r\n          formData.append('placeImage', imageFilePicker);\r\n\r\n          const newPlace = await fetch(\r\n            //http://localhost:8080\r\n            '/places/ceateNewPlace',\r\n            {\r\n              method: 'POST',\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n              body: formData,\r\n            }\r\n          );\r\n\r\n          const response = await newPlace.json();\r\n\r\n          if (response.success) {\r\n            setIsLoading(false);\r\n            modalOpenHandler(\r\n              modalState,\r\n              dispatch,\r\n              actionCreator,\r\n              'info',\r\n              response.message\r\n            );\r\n            history.push(`/${user.id}/places`);\r\n            console.log('NOWE MIEJSCE');\r\n            console.log(response.message);\r\n            console.log('Miejsce dodano');\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          modalOpenHandler(\r\n            modalState,\r\n            dispatch,\r\n            actionCreator,\r\n            'info',\r\n            error.message\r\n          );\r\n        }\r\n      }\r\n      if (props.editPlace) {\r\n        console.log(values.isTaskFinished);\r\n        try {\r\n          setIsLoading(true);\r\n          const editedPlace = await addEditPlace(\r\n            //http://localhost:8080\r\n            `/places/edit/${props.editPlace.placeId}`,\r\n            {\r\n              title: values.placeName,\r\n              description: values.description,\r\n              isTaskFinished: values.isTaskFinished,\r\n            }\r\n          );\r\n          console.log(editedPlace);\r\n          if (editedPlace.success) {\r\n            setIsLoading(false);\r\n            modalOpenHandler(\r\n              modalState,\r\n              dispatch,\r\n              actionCreator,\r\n              'info',\r\n              editedPlace.message\r\n            );\r\n            console.log(editedPlace.data.creator);\r\n            history.push(`/${editedPlace.data.creator}/places`);\r\n            console.log('EDYTUJ');\r\n            console.log(editedPlace);\r\n          }\r\n          if (editedPlace.success === false) {\r\n            console.log('JEST BŁĄD TOKENA');\r\n            setIsLoading(false);\r\n            modalOpenHandler(\r\n              modalState,\r\n              dispatch,\r\n              actionCreator,\r\n              'info',\r\n              editedPlace.message\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.log('EROR W EDICIE', error);\r\n          setIsLoading(false);\r\n          modalOpenHandler(\r\n            modalState,\r\n            dispatch,\r\n            actionCreator,\r\n            'info',\r\n            error.message\r\n          );\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(imageFilePicker);\r\n  }, [imageFilePicker, formik.errors]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <StyledForm onSubmit={formik.handleSubmit}>\r\n        <label htmlFor=\"firstName\">Place Name</label>\r\n        <StyledInput\r\n          id=\"placeName\"\r\n          name=\"placeName\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.placeName}\r\n          danger={Object.keys(formik.errors).includes('placeName')}\r\n        />\r\n        {formik.touched.placeName && formik.errors.placeName && (\r\n          <StyledErrorDiv>{formik.errors.placeName}</StyledErrorDiv>\r\n        )}\r\n\r\n        <label htmlFor=\"description\">Description</label>\r\n        <StyledTextArea\r\n          as=\"textarea\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.description}\r\n          danger={Object.keys(formik.errors).includes('description')}\r\n        />\r\n        {formik.touched.description && formik.errors.description && (\r\n          <StyledErrorDiv>{formik.errors.description}</StyledErrorDiv>\r\n        )}\r\n\r\n        {user.userType === 'admin' && (\r\n          <FormikProvider value={formik}>\r\n            <label>\r\n              <Field type=\"checkbox\" name=\"isTaskFinished\" />\r\n              {formik.values.isTaskFinished\r\n                ? 'Lokal posprzątany'\r\n                : ' Lokal czeka na sprzątanie '}\r\n            </label>\r\n          </FormikProvider>\r\n        )}\r\n\r\n        {!props.editPlace && (\r\n          <>\r\n            <label htmlFor=\"address\">Address</label>\r\n            <StyledInput\r\n              id=\"address\"\r\n              name=\"address\"\r\n              type=\"text\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.address}\r\n              danger={Object.keys(formik.errors).includes('address')}\r\n            />\r\n            {formik.touched.address && formik.errors.address && (\r\n              <StyledErrorDiv>{formik.errors.address}</StyledErrorDiv>\r\n            )}\r\n            <ImageUploader\r\n              id={'image'}\r\n              name={'image'}\r\n              fileState={imageFilePicker}\r\n              fileStateHandler={setImageFilePicker}\r\n            />\r\n            {!imageFilePicker && (\r\n              <StyledErrorDiv> Photo of the place is required! </StyledErrorDiv>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {/* <button type=\"submit\">SUBMIT</button> */}\r\n        {/* <Button\r\n          type=\"submit\"\r\n          disabled={Object.keys(formik.errors).length > 0 || !imageFilePicker}\r\n        >\r\n          {!props.editPlace ? 'ADD PLACE' : 'EDIT PLACE'}\r\n        </Button> */}\r\n        {!props.editPlace ? (\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={Object.keys(formik.errors).length > 0 || !imageFilePicker}\r\n          >\r\n            ADD PLACE\r\n          </Button>\r\n        ) : (\r\n          <Button type=\"submit\">EDIT PLACE</Button>\r\n        )}\r\n      </StyledForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useFOrmik } from 'formik';\r\n\r\nimport PlaceForm from './PlaceForm';\r\n\r\nconst UpdatePlace = () => {\r\n  console.log('JESTEM W UPDATE');\r\n  const [placeToEdit, setPLaceToEdit] = useState(false);\r\n  const { placeId } = useParams();\r\n  console.log(placeId);\r\n\r\n  const getPLacetoEdit = async (placeID) => {\r\n    console.log('FUNKCJA');\r\n    try {\r\n      const fetchedPlace = await fetch(\r\n        //http://localhost:8080\r\n        `/places/place/${placeId}`\r\n      );\r\n      const body = await fetchedPlace.json();\r\n      if (body) {\r\n        console.log('JEstem w ifce', body.data[0]);\r\n        const dataToEdit = {\r\n          placeId,\r\n          title: body.data[0].title,\r\n          description: body.data[0].description,\r\n        };\r\n        setPLaceToEdit(dataToEdit);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('JEstem w use effect', placeToEdit);\r\n    getPLacetoEdit();\r\n    console.log(placeToEdit);\r\n  }, []);\r\n\r\n  if (!placeToEdit) {\r\n    // return <h2>JEST MIEJSCE</h2>;\r\n    return <h2>Could not find place!</h2>;\r\n  }\r\n\r\n  // return <h2>MIEJSCE ZNALEZIONO</h2>;\r\n\r\n  return <PlaceForm editPlace={placeToEdit} />;\r\n\r\n  // return <PlaceForm editPlace={[]} />;\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useFormik } from 'formik';\r\nimport CustomButton from '../../shared/components/FormElements/CustomButton';\r\nimport LoadingSpinner from '../../shared/components/UIComponent/LoadingSpinner';\r\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\r\nimport {\r\n  StyledForm,\r\n  StyledInput,\r\n  StyledTextArea,\r\n  StyledErrorDiv,\r\n} from '../../shared/StyledComponents/StyledForm';\r\nimport * as actionCreator from '../../redux/actions';\r\nimport { modalOpenHandler } from '../../shared/Functions/modalFunction';\r\n\r\nconst AuthForm = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [imageFilePicker, setImageFilePicker] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const modalState = useSelector((state) => state.modalReducer.isOpen);\r\n  const history = useHistory();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    } else {\r\n      const regex =\r\n        /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/g;\r\n\r\n      const isEmailValid = regex.test(values.email);\r\n      if (!isEmailValid) {\r\n        errors.email = 'Incorect format of email adreess';\r\n      }\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    } else if (values.password.length < 5) {\r\n      errors.password = 'Must be 5 characters or more';\r\n    } else if (values.password === values.userName) {\r\n      errors.password = 'User Name and password must be diffrent';\r\n    }\r\n\r\n    if (props.formType === 'register') {\r\n      if (!values.userName) {\r\n        errors.userName = 'Required';\r\n      } else if (values.userName.length < 5) {\r\n        errors.userName = 'Must be 5 characters or more';\r\n      }\r\n\r\n      if (!values.confirmPassword) {\r\n        errors.confirmPassword = 'Required';\r\n      } else if (values.confirmPassword !== values.password) {\r\n        errors.confirmPassword = 'Password are diffrent!';\r\n      }\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const postAuth = async (url, data) => {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return response.json();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      userName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      if (props.formType === 'register') {\r\n        // przygotowanie obiektu z danymi\r\n        let formData = new FormData();\r\n\r\n        formData.append('email', values.email);\r\n        formData.append('password', values.password);\r\n        formData.append('name', values.userName);\r\n        formData.append('image', imageFilePicker);\r\n        try {\r\n          setIsLoading(true);\r\n          const newUser = await fetch('/auth/signup', {\r\n            //http://localhost:8080\r\n            method: 'POST',\r\n            body: formData,\r\n          });\r\n\r\n          const response = await newUser.json();\r\n          if (response.success) {\r\n            console.log('Funkcja do rejestrowania');\r\n            setIsLoading(false);\r\n            modalOpenHandler(\r\n              modalState,\r\n              dispatch,\r\n              actionCreator,\r\n              'info',\r\n              response.message\r\n            );\r\n            history.push('/');\r\n          } else {\r\n            modalOpenHandler(\r\n              modalState,\r\n              dispatch,\r\n              actionCreator,\r\n              'info',\r\n              response.message\r\n            );\r\n            history.push('/');\r\n          }\r\n        } catch (error) {\r\n          console.log('ŁAPIĘ ERROR');\r\n\r\n          setIsLoading(false);\r\n\r\n          modalOpenHandler(\r\n            modalState,\r\n            dispatch,\r\n            actionCreator,\r\n            'info',\r\n            error.message\r\n          );\r\n        }\r\n      }\r\n      if (props.formType === 'login') {\r\n        console.log('Funkcja do logowania');\r\n\r\n        try {\r\n          setIsLoading(true);\r\n\r\n          const user = await postAuth(\r\n            '/auth/login', //http://localhost:8080\r\n            values\r\n          );\r\n\r\n          if (user.success) {\r\n            setIsLoading(false);\r\n\r\n            // zapisywanie danych usera do reduxa\r\n            const tokenExpDate = new Date(\r\n              new Date().getTime() + 1000 * 60 * 60\r\n            );\r\n            dispatch(\r\n              actionCreator.storeUserData({\r\n                user: user.user,\r\n                token: user.token,\r\n                tokenExpDate: tokenExpDate.toISOString(),\r\n              })\r\n            );\r\n            // zapisywanie  id Usera i TOKENA do localStorage\r\n\r\n            localStorage.setItem(\r\n              'userData',\r\n              JSON.stringify({\r\n                userId: user.user.id,\r\n                token: user.token,\r\n                expiration: tokenExpDate.toISOString(),\r\n              })\r\n            );\r\n            modalOpenHandler(\r\n              modalState,\r\n              dispatch,\r\n              actionCreator,\r\n              'info',\r\n              user.message\r\n            );\r\n            history.push('/');\r\n          } else {\r\n            setIsLoading(false);\r\n            modalOpenHandler(\r\n              modalState,\r\n              dispatch,\r\n              actionCreator,\r\n              'info',\r\n              user.message\r\n            );\r\n          }\r\n        } catch (error) {\r\n          modalOpenHandler(\r\n            modalState,\r\n            dispatch,\r\n            actionCreator,\r\n            'info',\r\n            error.message\r\n          );\r\n        }\r\n      }\r\n\r\n      // alert(JSON.stringify(values, null, 2));\r\n      // dispatch(actionTypes.storeUserData(user.user));\r\n      // history.push('/');\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('Use EFFECT');\r\n    // console.log(formik.values);\r\n    // console.log(imageFilePicker);\r\n  }, [props.formType]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <StyledForm onSubmit={formik.handleSubmit}>\r\n        {props.formType === 'register' && (\r\n          <>\r\n            <label htmlFor=\"userName\">User Name</label>\r\n            <StyledInput\r\n              id={'userName'}\r\n              name={'userName'}\r\n              type={'text'}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.userName}\r\n              danger={Object.keys(formik.errors).includes('userName')}\r\n            />\r\n            {formik.touched.userName && formik.errors.userName && (\r\n              <StyledErrorDiv>{formik.errors.userName}</StyledErrorDiv>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <label htmlFor=\"userName\">E-Mail</label>\r\n        <StyledInput\r\n          id={'email'}\r\n          name={'email'}\r\n          type={'email'}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.email}\r\n          danger={Object.keys(formik.errors).includes('userName')}\r\n        />\r\n        {formik.touched.email && formik.errors.email && (\r\n          <StyledErrorDiv>{formik.errors.email}</StyledErrorDiv>\r\n        )}\r\n\r\n        <label htmlFor=\"password\">Password</label>\r\n        <StyledInput\r\n          id={'password'}\r\n          name={'password'}\r\n          type={'password'}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.password}\r\n          danger={Object.keys(formik.errors).includes('password')}\r\n        />\r\n        {formik.touched.password && formik.errors.password && (\r\n          <StyledErrorDiv>{formik.errors.password}</StyledErrorDiv>\r\n        )}\r\n\r\n        {props.formType === 'register' && (\r\n          <>\r\n            {' '}\r\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n            <StyledInput\r\n              id={'confirmPassword'}\r\n              name={'confirmPassword'}\r\n              type={'password'}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.confirmPassword}\r\n              danger={Object.keys(formik.errors).includes('confirmPassword')}\r\n            />\r\n            {formik.touched.confirmPassword &&\r\n              formik.errors.confirmPassword && (\r\n                <StyledErrorDiv>{formik.errors.confirmPassword}</StyledErrorDiv>\r\n              )}\r\n            <label htmlFor={'image'}>Profile Image</label>\r\n            <ImageUploader\r\n              id={'image'}\r\n              name={'image'}\r\n              fileState={imageFilePicker}\r\n              fileStateHandler={setImageFilePicker}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <CustomButton type={'submit'}>\r\n          {props.formType === 'login' ? 'Sign Up' : 'Register'}\r\n        </CustomButton>\r\n\r\n        {props.formType === 'login' ? (\r\n          <CustomButton\r\n            onClick={(e) => props.changeFormTypeFunc(e, 'loginBtn')}\r\n          >\r\n            Switch to Register\r\n          </CustomButton>\r\n        ) : (\r\n          <CustomButton\r\n            onClick={(e) => props.changeFormTypeFunc(e, 'registerBtn')}\r\n          >\r\n            Switch to Sign up\r\n          </CustomButton>\r\n        )}\r\n      </StyledForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport AuthForm from '../../../places/pages/AuthForm';\r\n\r\nconst AuthFormView = () => {\r\n  const [formType, setFormType] = useState('login');\r\n  useEffect(() => {\r\n \r\n  }, [formType]);\r\n\r\n  const handleFormTypeChange = (e,buttonType) => {\r\n      e.preventDefault()\r\n    if (buttonType === 'registerBtn') {\r\n      setFormType('login');\r\n    }\r\n    if (buttonType === 'loginBtn') {\r\n      setFormType('register');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthForm formType={formType} changeFormTypeFunc={handleFormTypeChange} />\r\n  );\r\n};\r\n\r\nexport default AuthFormView;\r\n","import React from 'react';\r\n\r\nimport styles from './linkitembutton.module.scss';\r\n\r\nconst LinkItemButton = ({ action, text }) => {\r\n  return (\r\n    <span className={action ? `${styles.span} ${styles.action}` : styles.span}>\r\n      {text}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default LinkItemButton;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './landing.module.scss';\r\nimport LinkItemButton from '../LinkItemButton/LinkItemButton';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div>\r\n      <div className={styles.mainWrapper}>\r\n        <div className={styles.contentWrapper}>\r\n          <div className={styles.signWrapper}>\r\n            <h1>Witaj w APARTMENS CLEAN COMPANY</h1>\r\n            <ul>\r\n              <li>\r\n                <p>\r\n                  {' '}\r\n                  Załóż konto i skłdaj zlecenie na sprzątanie nieruchomości{' '}\r\n                </p>\r\n              </li>\r\n              <li>\r\n                <p>Działamy na terenie całego kraju</p>\r\n              </li>\r\n              <li>\r\n                <p>Masz podgląd do stanu realizacji zamówienia</p>\r\n              </li>\r\n              <li>\r\n                <p>Atrakcyjne ceny!</p>\r\n              </li>\r\n              <li>\r\n                <p>Dzięki nam zaoszczędzisz czas i pieniadze</p>\r\n              </li>\r\n            </ul>\r\n            <div className={styles.buttonWrapper}>\r\n              <Link to=\"/login\">\r\n                <LinkItemButton text={'zaloguj się'} />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className={styles.pictureWrapper}></div>\r\n        </div>\r\n        <footer className={styles.contactWrapper}>\r\n          <p>Copyright &#169; 2021 Clean Company sp.zoo All Rights Reserved </p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  data: {},\r\n  modalType: '',\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CLOSE_MODAL:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        data: {},\r\n        modalType: '',\r\n      };\r\n\r\n    case actionTypes.OPEN_PLACE_MODAL:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        data: {\r\n          adress: action.payload.data.adress,\r\n          coordinates: action.payload.data.coordinates,\r\n        },\r\n        modalType: action.payload.modalType,\r\n      };\r\n\r\n    case actionTypes.OPEN_DELETE_ITEM_MODAL:\r\n \r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        data: {\r\n          itemID: action.payload.data.itemID,\r\n          imageUrl: action.payload.data.imageUrl,\r\n          info: action.payload.data.info,\r\n        },\r\n        modalType: action.payload.modalType,\r\n      };\r\n    case actionTypes.OPEN_INFO_MODAL:\r\n\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        data: {\r\n          message: action.payload.data,\r\n        },\r\n        modalType: action.payload.modalType,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  user: {},\r\n  token: '',\r\n  tokenExpDate: '',\r\n  isAuthenicate: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.USER_LOGIN:\r\n      return {\r\n        ...state,\r\n        user: { ...action.payload.user },\r\n        token: action.payload.token,\r\n        tokenExpDate: action.payload.tokenExpDate,\r\n        isAuthenicate: true,\r\n      };\r\n    case actionTypes.USER_TOKEN_LOGIN:\r\n      return {\r\n        ...state,\r\n        user: { ...action.payload.user },\r\n        token: action.payload.token,\r\n        tokenExpDate: action.payload.tokenExpDate,\r\n        isAuthenicate: true,\r\n      };\r\n    case actionTypes.USER_LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        token: '',\r\n        tokenExpDate: '',\r\n        isAuthenicate: false,\r\n      };\r\n    case actionTypes.USER_DELETED_PLACE:\r\n      const filtredPlaces = state.user.ownPlaces.filter(\r\n        (el) => el._id !== action.payload\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          ownPlaces: filtredPlaces,\r\n        },\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport modalReducer from './reduers/modalReducer';\r\nimport authReducer from './reduers/authReducer';\r\n\r\nconst rootReducer = combineReducers({ modalReducer, authReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from '../src/redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}